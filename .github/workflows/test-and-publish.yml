name: Test and Publish

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  schedule:
    - cron: "0 0 * * 0"
  push:
    tags:
      - "v*"

jobs:
  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    strategy:
      matrix:
        spark_version: ['3.1.3', '3.2.4', '3.3.4', '3.4.2', '3.5.0', '4.0.0']
        include:
          - spark_version: '3.1.3'
            scala_version: '2.12.12'
            java_version: '11'
          - spark_version: '3.2.4'
            scala_version: '2.12.12'
            java_version: '11'
          - spark_version: '3.3.4'
            scala_version: '2.12.12'
            java_version: '11'
          - spark_version: '3.4.2'
            scala_version: '2.12.12'
            java_version: '11'
          - spark_version: '3.5.0'
            scala_version: '2.12.12'
            java_version: '11'
          - spark_version: '4.0.0'
            scala_version: '2.13.8'
            java_version: '17'

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java_version }}
          distribution: 'temurin'
          cache: sbt
      - name: Set up sbt launcher
        uses: sbt/setup-sbt@v1
      - name: Set up GPG
        env:
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}
        run: |
          openssl enc -d -aes-256-cbc -K $ENCRYPTION_KEY -iv $ENCRYPTION_IV -in ci/secring.asc.enc -out ci/secring.asc
          gpg --import ci/secring.asc
      - name: Publish Spark ${{ matrix.spark_version }}
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: |
          sbt ++${{ matrix.scala_version }} -Dspark.version=${{ matrix.spark_version }} clean publishSigned sonatypeBundleRelease
