{
  "paragraphs": [
    {
      "text": "%md\n## This is a small demo that illustrates the usage of the SingleStore-Spark connector. \n#### It connects to the ciab docker container (https://hub.docker.com/r/singlestore/cluster-in-a-box) and runs some basic queries on it.",
      "user": "anonymous",
      "dateUpdated": "2021-09-23 11:00:50.089",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 13.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eThis is a small demo that illustrates the usage of the SingleStore-Spark connector.\u003c/h2\u003e\n\u003ch4\u003eIt connects to the ciab docker container (\u003ca href\u003d\"https://hub.docker.com/r/singlestore/cluster-in-a-box\"\u003ehttps://hub.docker.com/r/singlestore/cluster-in-a-box\u003c/a\u003e) and runs some basic queries on it.\u003c/h4\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1587645478876_994795668",
      "id": "paragraph_1587645478876_994795668",
      "dateCreated": "2020-04-23 12:37:58.876",
      "dateStarted": "2021-09-23 11:00:50.095",
      "dateFinished": "2021-09-23 11:00:50.108",
      "status": "FINISHED"
    },
    {
      "title": "Configure Spark",
      "text": "%spark.conf\n\n// Comma-separated list of Maven coordinates of jars to include on the driver and executor classpaths\nspark.jars.packages com.singlestore:singlestore-spark-connector_2.12:4.1.4-spark-3.4.0\n\n// The hostname or IP address of the SingleStore Master Aggregator in the `host[:port]` format, where port is an optional parameter\n// singlestore-ciab-for-zeppelin - hostname of the docker created by https://hub.docker.com/r/singlestore/cluster-in-a-box\n// 3306 - port on which SingleStore Master Aggregator is started\nspark.datasource.singlestore.ddlEndpoint singlestore-ciab-for-zeppelin:3306\n\n// The hostname or IP address of SingleStore Aggregator nodes to run queries against in the `host[:port],host[:port],...` format, \n// where :port is an optional parameter (multiple hosts separated by comma) (default: ddlEndpoint)\n// Example\n// spark.datasource.singlestore.dmlEndpoints child-agg:3308,child-agg2\nspark.datasource.singlestore.dmlEndpoints singlestore-ciab-for-zeppelin:3306\n\n// SingleStore username (default: root)\nspark.datasource.singlestore.user root\n\n// SingleStore password (default: no password)\nspark.datasource.singlestore.password my_password",
      "user": "anonymous",
      "dateUpdated": "2022-07-06 11:32:22.885",
      "progress": 0,
      "config": {
        "colWidth": 12.0,
        "fontSize": 13.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1587645537976_1278581633",
      "id": "paragraph_1587645537976_1278581633",
      "dateCreated": "2020-04-23 12:38:57.976",
      "dateStarted": "2022-07-06 11:32:22.890",
      "dateFinished": "2022-07-06 11:32:22.898",
      "status": "FINISHED"
    },
    {
      "title": "Create a database using SQLHelpers",
      "text": "import com.singlestore.spark.SQLHelper.QueryMethods\n\nspark.executeSinglestoreQuery(\"create database if not exists demoDB\")",
      "user": "anonymous",
      "dateUpdated": "2022-07-06 11:32:43.948",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "fontSize": 13.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import com.singlestore.spark.SQLHelper.QueryMethods\n\u001b[1m\u001b[34mres5\u001b[0m: \u001b[1m\u001b[32mIterator[org.apache.spark.sql.Row]\u001b[0m \u003d \u003citerator\u003e\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1587645590204_-1422944272",
      "id": "paragraph_1587645590204_-1422944272",
      "dateCreated": "2020-04-23 12:39:50.204",
      "dateStarted": "2022-07-06 11:32:43.951",
      "dateFinished": "2022-07-06 11:32:44.203",
      "status": "FINISHED"
    },
    {
      "title": "Insert data to the table",
      "text": "import org.apache.spark.sql.{SaveMode}\n\nval people1 \u003d spark.createDataFrame(Seq(\n    (1, \"andy\", 5, \"USA\"), \n    (2, \"jeff\", 23, \"China\"), \n    (3, \"james\", 62, \"USA\"),\n    (4, \"clara\", 82, \"USA\"),\n    (5, \"emmy\", 9, \"Canada\")\n    )).toDF(\"id\", \"name\", \"age\", \"country\")\npeople1.show()\n\npeople1.write\n    .format(\"singlestore\")\n    .mode(SaveMode.Overwrite) // recreate table if it exists\n    .save(\"demoDB.people\") // write to table `people` in database `demoDB`\n",
      "user": "anonymous",
      "dateUpdated": "2022-07-06 11:32:46.800",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "fontSize": 13.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+---+-----+---+-------+\n| id| name|age|country|\n+---+-----+---+-------+\n|  1| andy|  5|    USA|\n|  2| jeff| 23|  China|\n|  3|james| 62|    USA|\n|  4|clara| 82|    USA|\n|  5| emmy|  9| Canada|\n+---+-----+---+-------+\n\nimport org.apache.spark.sql.SaveMode\n\u001b[1m\u001b[34mpeople1\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [id: int, name: string ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://322bfd970e79:4040/jobs/job?id\u003d14"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1587646718045_-758896661",
      "id": "paragraph_1587646718045_-758896661",
      "dateCreated": "2020-04-23 12:58:38.045",
      "dateStarted": "2022-07-06 11:32:46.807",
      "dateFinished": "2022-07-06 11:32:47.382",
      "status": "FINISHED"
    },
    {
      "title": "Create a Spark SQL table backed by a SingleStore table",
      "text": "%sql\nCREATE DATABASE IF NOT EXISTS demoDB;\nCREATE TABLE IF NOT EXISTS demoDB.people USING singlestore OPTIONS (\u0027dbtable\u0027\u003d\u0027demoDB.people\u0027);",
      "user": "anonymous",
      "dateUpdated": "2022-07-06 11:33:29.031",
      "progress": 0,
      "config": {
        "colWidth": 6.0,
        "fontSize": 13.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1587645780167_-228404075",
      "id": "paragraph_1587645780167_-228404075",
      "dateCreated": "2020-04-23 12:43:00.167",
      "dateStarted": "2022-07-06 11:33:29.037",
      "dateFinished": "2022-07-06 11:33:29.285",
      "status": "FINISHED"
    },
    {
      "title": "Run a raw Spark SQL query over a Spark SQL table",
      "text": "%sql\nSELECT * FROM demoDB.people;\nSELECT * FROM demoDB.people WHERE people.age \u003c 10;\nSELECT country, MAX(age) FROM demoDB.people GROUP BY country;",
      "user": "anonymous",
      "dateUpdated": "2022-07-06 11:33:31.802",
      "progress": 56,
      "config": {
        "colWidth": 6.0,
        "fontSize": 13.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "name": "string",
                      "age": "string",
                      "country": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "name": "string",
                      "age": "string",
                      "country": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "2": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "country": "string",
                      "max(age)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tname\tage\tcountry\n2\tjeff\t23\tChina\n4\tclara\t82\tUSA\n3\tjames\t62\tUSA\n5\temmy\t9\tCanada\n1\tandy\t5\tUSA\n"
          },
          {
            "type": "TABLE",
            "data": "id\tname\tage\tcountry\n5\temmy\t9\tCanada\n1\tandy\t5\tUSA\n"
          },
          {
            "type": "TABLE",
            "data": "country\tmax(age)\nChina\t23\nCanada\t9\nUSA\t82\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://322bfd970e79:4040/jobs/job?id\u003d15"
            },
            {
              "jobUrl": "http://322bfd970e79:4040/jobs/job?id\u003d16"
            },
            {
              "jobUrl": "http://322bfd970e79:4040/jobs/job?id\u003d17"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1587646114445_960936248",
      "id": "paragraph_1587646114445_960936248",
      "dateCreated": "2020-04-23 12:48:34.446",
      "dateStarted": "2022-07-06 11:33:31.809",
      "dateFinished": "2022-07-06 11:33:34.428",
      "status": "FINISHED"
    },
    {
      "text": "%sql\n",
      "user": "anonymous",
      "dateUpdated": "2022-07-06 11:33:31.807",
      "progress": 0,
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1657107211807_874039426",
      "id": "paragraph_1657107211807_874039426",
      "dateCreated": "2022-07-06 11:33:31.807",
      "status": "READY"
    }
  ],
  "name": "spark-sql-singlestore-demo",
  "id": "2F7PZ81H6",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}